// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gRPC_Lookupservice/pb/lookup.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LookingUp struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookingUp) Reset()         { *m = LookingUp{} }
func (m *LookingUp) String() string { return proto.CompactTextString(m) }
func (*LookingUp) ProtoMessage()    {}
func (*LookingUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcc98fd1d7359ca, []int{0}
}

func (m *LookingUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookingUp.Unmarshal(m, b)
}
func (m *LookingUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookingUp.Marshal(b, m, deterministic)
}
func (m *LookingUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookingUp.Merge(m, src)
}
func (m *LookingUp) XXX_Size() int {
	return xxx_messageInfo_LookingUp.Size(m)
}
func (m *LookingUp) XXX_DiscardUnknown() {
	xxx_messageInfo_LookingUp.DiscardUnknown(m)
}

var xxx_messageInfo_LookingUp proto.InternalMessageInfo

func (m *LookingUp) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *LookingUp) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type LookUpRequest struct {
	LookingUp            *LookingUp `protobuf:"bytes,1,opt,name=lookingUp,proto3" json:"lookingUp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LookUpRequest) Reset()         { *m = LookUpRequest{} }
func (m *LookUpRequest) String() string { return proto.CompactTextString(m) }
func (*LookUpRequest) ProtoMessage()    {}
func (*LookUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcc98fd1d7359ca, []int{1}
}

func (m *LookUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookUpRequest.Unmarshal(m, b)
}
func (m *LookUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookUpRequest.Marshal(b, m, deterministic)
}
func (m *LookUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookUpRequest.Merge(m, src)
}
func (m *LookUpRequest) XXX_Size() int {
	return xxx_messageInfo_LookUpRequest.Size(m)
}
func (m *LookUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookUpRequest proto.InternalMessageInfo

func (m *LookUpRequest) GetLookingUp() *LookingUp {
	if m != nil {
		return m.LookingUp
	}
	return nil
}

type LookUpResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookUpResponse) Reset()         { *m = LookUpResponse{} }
func (m *LookUpResponse) String() string { return proto.CompactTextString(m) }
func (*LookUpResponse) ProtoMessage()    {}
func (*LookUpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcc98fd1d7359ca, []int{2}
}

func (m *LookUpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookUpResponse.Unmarshal(m, b)
}
func (m *LookUpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookUpResponse.Marshal(b, m, deterministic)
}
func (m *LookUpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookUpResponse.Merge(m, src)
}
func (m *LookUpResponse) XXX_Size() int {
	return xxx_messageInfo_LookUpResponse.Size(m)
}
func (m *LookUpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookUpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookUpResponse proto.InternalMessageInfo

func (m *LookUpResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*LookingUp)(nil), "lookup.LookingUp")
	proto.RegisterType((*LookUpRequest)(nil), "lookup.LookUpRequest")
	proto.RegisterType((*LookUpResponse)(nil), "lookup.LookUpResponse")
}

func init() { proto.RegisterFile("gRPC_Lookupservice/pb/lookup.proto", fileDescriptor_dfcc98fd1d7359ca) }

var fileDescriptor_dfcc98fd1d7359ca = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xed, 0xd0, 0x62, 0x9f, 0x28, 0xf8, 0x60, 0x43, 0x14, 0x41, 0x7a, 0xea, 0x69, 0x1d,
	0xf3, 0xe4, 0x4d, 0xe7, 0x44, 0x10, 0x11, 0xe9, 0x18, 0x82, 0x97, 0x91, 0xea, 0xb3, 0x06, 0xd3,
	0x24, 0x26, 0xa9, 0x9f, 0xc7, 0x8f, 0x2a, 0x4d, 0xd6, 0x4d, 0xbc, 0xcd, 0xe3, 0xfb, 0xbd, 0xd7,
	0xdf, 0xff, 0x5f, 0x02, 0x69, 0x55, 0x3c, 0x5e, 0x2f, 0xee, 0x95, 0xfa, 0x68, 0xb4, 0x25, 0xf3,
	0xc5, 0x5f, 0x28, 0xd7, 0x65, 0x2e, 0x3c, 0x18, 0x6a, 0xa3, 0x9c, 0xc2, 0x38, 0x4c, 0xe9, 0x2d,
	0x24, 0xed, 0x21, 0x97, 0xd5, 0x5c, 0xe3, 0x29, 0xc0, 0x1b, 0x37, 0xd6, 0x2d, 0x24, 0xab, 0xe9,
	0x28, 0x3a, 0x8b, 0xb2, 0xa4, 0x48, 0x3c, 0x79, 0x60, 0x35, 0xe1, 0x09, 0x24, 0x82, 0x75, 0xdb,
	0x9e, 0xdf, 0xee, 0xb6, 0xa0, 0x5d, 0xa6, 0x97, 0xb0, 0xdf, 0x8a, 0xe6, 0xba, 0xa0, 0xcf, 0x86,
	0xac, 0xc3, 0x1c, 0x12, 0xd1, 0x99, 0xbd, 0x6b, 0x6f, 0x7c, 0x38, 0x5c, 0x76, 0x58, 0x45, 0x16,
	0xeb, 0x9b, 0x34, 0x83, 0x83, 0xce, 0x60, 0xb5, 0x92, 0x96, 0x70, 0x00, 0xb1, 0x21, 0xdb, 0x08,
	0xe7, 0xbf, 0xdf, 0x29, 0x96, 0xd3, 0xf8, 0xbb, 0xd7, 0x85, 0xcd, 0xc2, 0xef, 0xe1, 0x05, 0xc4,
	0x01, 0x60, 0xff, 0x77, 0xc6, 0xaa, 0xcd, 0xf1, 0xe0, 0x2f, 0x0e, 0x11, 0xe9, 0x16, 0xde, 0x41,
	0x7f, 0xed, 0x22, 0x33, 0x73, 0x86, 0x58, 0xcd, 0x65, 0xb5, 0xb1, 0x69, 0x14, 0xe1, 0x15, 0xc0,
	0x84, 0x4f, 0xf9, 0x3f, 0xab, 0x64, 0xd1, 0x28, 0xc2, 0x1b, 0xc0, 0xc0, 0x9f, 0xb8, 0x7b, 0x9f,
	0x12, 0x7b, 0x15, 0x5c, 0xd2, 0xc6, 0xaa, 0xc9, 0xf6, 0x73, 0x4f, 0x97, 0x65, 0xec, 0x1f, 0xfb,
	0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xad, 0x60, 0xb4, 0xe2, 0x12, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LookUpServiceClient is the client API for LookUpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LookUpServiceClient interface {
	//unary
	LookUp(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LookUpResponse, error)
	//ServerStreaming
	LookUpServerStreaming(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (LookUpService_LookUpServerStreamingClient, error)
	//BiDiStreaming
	BiDiLookUp(ctx context.Context, opts ...grpc.CallOption) (LookUpService_BiDiLookUpClient, error)
	//unary with deadline
	LookUpWithDeadline(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LookUpResponse, error)
}

type lookUpServiceClient struct {
	cc *grpc.ClientConn
}

func NewLookUpServiceClient(cc *grpc.ClientConn) LookUpServiceClient {
	return &lookUpServiceClient{cc}
}

func (c *lookUpServiceClient) LookUp(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LookUpResponse, error) {
	out := new(LookUpResponse)
	err := c.cc.Invoke(ctx, "/lookup.LookUpService/LookUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lookUpServiceClient) LookUpServerStreaming(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (LookUpService_LookUpServerStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LookUpService_serviceDesc.Streams[0], "/lookup.LookUpService/LookUpServerStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &lookUpServiceLookUpServerStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LookUpService_LookUpServerStreamingClient interface {
	Recv() (*LookUpResponse, error)
	grpc.ClientStream
}

type lookUpServiceLookUpServerStreamingClient struct {
	grpc.ClientStream
}

func (x *lookUpServiceLookUpServerStreamingClient) Recv() (*LookUpResponse, error) {
	m := new(LookUpResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *lookUpServiceClient) BiDiLookUp(ctx context.Context, opts ...grpc.CallOption) (LookUpService_BiDiLookUpClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LookUpService_serviceDesc.Streams[1], "/lookup.LookUpService/BiDiLookUp", opts...)
	if err != nil {
		return nil, err
	}
	x := &lookUpServiceBiDiLookUpClient{stream}
	return x, nil
}

type LookUpService_BiDiLookUpClient interface {
	Send(*LookUpRequest) error
	Recv() (*LookUpResponse, error)
	grpc.ClientStream
}

type lookUpServiceBiDiLookUpClient struct {
	grpc.ClientStream
}

func (x *lookUpServiceBiDiLookUpClient) Send(m *LookUpRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *lookUpServiceBiDiLookUpClient) Recv() (*LookUpResponse, error) {
	m := new(LookUpResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *lookUpServiceClient) LookUpWithDeadline(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LookUpResponse, error) {
	out := new(LookUpResponse)
	err := c.cc.Invoke(ctx, "/lookup.LookUpService/LookUpWithDeadline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LookUpServiceServer is the server API for LookUpService service.
type LookUpServiceServer interface {
	//unary
	LookUp(context.Context, *LookUpRequest) (*LookUpResponse, error)
	//ServerStreaming
	LookUpServerStreaming(*LookUpRequest, LookUpService_LookUpServerStreamingServer) error
	//BiDiStreaming
	BiDiLookUp(LookUpService_BiDiLookUpServer) error
	//unary with deadline
	LookUpWithDeadline(context.Context, *LookUpRequest) (*LookUpResponse, error)
}

func RegisterLookUpServiceServer(s *grpc.Server, srv LookUpServiceServer) {
	s.RegisterService(&_LookUpService_serviceDesc, srv)
}

func _LookUpService_LookUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LookUpServiceServer).LookUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lookup.LookUpService/LookUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LookUpServiceServer).LookUp(ctx, req.(*LookUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LookUpService_LookUpServerStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LookUpRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LookUpServiceServer).LookUpServerStreaming(m, &lookUpServiceLookUpServerStreamingServer{stream})
}

type LookUpService_LookUpServerStreamingServer interface {
	Send(*LookUpResponse) error
	grpc.ServerStream
}

type lookUpServiceLookUpServerStreamingServer struct {
	grpc.ServerStream
}

func (x *lookUpServiceLookUpServerStreamingServer) Send(m *LookUpResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _LookUpService_BiDiLookUp_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LookUpServiceServer).BiDiLookUp(&lookUpServiceBiDiLookUpServer{stream})
}

type LookUpService_BiDiLookUpServer interface {
	Send(*LookUpResponse) error
	Recv() (*LookUpRequest, error)
	grpc.ServerStream
}

type lookUpServiceBiDiLookUpServer struct {
	grpc.ServerStream
}

func (x *lookUpServiceBiDiLookUpServer) Send(m *LookUpResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *lookUpServiceBiDiLookUpServer) Recv() (*LookUpRequest, error) {
	m := new(LookUpRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LookUpService_LookUpWithDeadline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LookUpServiceServer).LookUpWithDeadline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lookup.LookUpService/LookUpWithDeadline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LookUpServiceServer).LookUpWithDeadline(ctx, req.(*LookUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LookUpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lookup.LookUpService",
	HandlerType: (*LookUpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LookUp",
			Handler:    _LookUpService_LookUp_Handler,
		},
		{
			MethodName: "LookUpWithDeadline",
			Handler:    _LookUpService_LookUpWithDeadline_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LookUpServerStreaming",
			Handler:       _LookUpService_LookUpServerStreaming_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BiDiLookUp",
			Handler:       _LookUpService_BiDiLookUp_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gRPC_Lookupservice/pb/lookup.proto",
}
